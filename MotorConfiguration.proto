syntax = "proto3";
package ck;
//Coprocessor -> RIO
//ZMQ group name "motorconfig"
message MotorConfiguration {
    message Motor {
        enum ControllerType
        {
            TALON_FX = 0;
            TALON_SRX = 1;
        };

        enum ControllerMode
        {
            MASTER = 0;
            FAST_MASTER = 1;
            SLAVE = 2;
            INVALID = 3;
        };

        enum InvertType
        {
            None = 0;
            InvertMotorOutput = 1;
            FollowMaster = 2;
            OpposeMaster = 3;
        };

        enum LimitSwitchSource
        {
            option allow_alias = true;
            FeedbackConnector = 0;
            RemoteTalon = 1;
            RemoteTalonSRX = 1;
            RemoteCANifier = 2;
            Deactivated = 3;
        };

        enum LimitSwitchNormal
        {
            NormallyOpen = 0;
            NormallyClosed = 1;
            Disabled = 2;
        };

        enum NeutralMode
        {
            EEPROMSetting = 0;
            Coast = 1;
            Brake = 2;
        };

        message CurrentLimitConfiguration
        {
            bool enable = 1;
            double current_limit = 2;
            double trigger_threshold_current = 3;
            double trigger_threshold_time = 4;
        }

        int32 id = 1;
        ControllerType controller_type = 2;
        ControllerMode controller_mode = 3;
        double kP = 4;
        double kI = 5;
        double kD = 6;
        double kF = 7;
        double iZone = 8;
        double max_i_accum = 9;
        double allowed_closed_loop_error = 10;
        double max_closed_loop_peak_output = 11;
        double motion_cruise_velocity = 12;
        double motion_acceleration = 13;
        int32 motion_s_curve_strength = 14;
        double forward_soft_limit = 15;
        bool forward_soft_limit_enable = 16;
        double reverse_soft_limit = 17;
        bool reverse_soft_limit_enable = 18;
        double feedback_sensor_coefficient = 19;
        double voltage_compensation_saturation = 20;
        bool voltage_compensation_enabled = 21;
        InvertType invert_type = 22;
        bool sensor_phase_inverted = 23;
        NeutralMode neutral_mode = 24;
        double open_loop_ramp = 25;
        double closed_loop_ramp = 26;
        CurrentLimitConfiguration supply_current_limit_config = 27;
        CurrentLimitConfiguration stator_current_limit_config = 28;
        LimitSwitchSource forward_limit_switch_source = 29;
        LimitSwitchNormal forward_limit_switch_normal = 30;
        LimitSwitchSource reverse_limit_switch_source = 31;
        LimitSwitchNormal reverse_limit_switch_normal = 32;
        double peak_output_forward = 33;
        double peak_output_reverse = 34;
    };

    repeated Motor motors = 1;
};